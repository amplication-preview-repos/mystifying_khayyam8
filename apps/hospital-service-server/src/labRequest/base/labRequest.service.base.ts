/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";

import {
  Prisma,
  LabRequest as PrismaLabRequest,
  LabReport as PrismaLabReport,
  Consultation as PrismaConsultation,
} from "@prisma/client";

export class LabRequestServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.LabRequestCountArgs, "select">
  ): Promise<number> {
    return this.prisma.labRequest.count(args);
  }

  async labRequests(
    args: Prisma.LabRequestFindManyArgs
  ): Promise<PrismaLabRequest[]> {
    return this.prisma.labRequest.findMany(args);
  }
  async labRequest(
    args: Prisma.LabRequestFindUniqueArgs
  ): Promise<PrismaLabRequest | null> {
    return this.prisma.labRequest.findUnique(args);
  }
  async createLabRequest(
    args: Prisma.LabRequestCreateArgs
  ): Promise<PrismaLabRequest> {
    return this.prisma.labRequest.create(args);
  }
  async updateLabRequest(
    args: Prisma.LabRequestUpdateArgs
  ): Promise<PrismaLabRequest> {
    return this.prisma.labRequest.update(args);
  }
  async deleteLabRequest(
    args: Prisma.LabRequestDeleteArgs
  ): Promise<PrismaLabRequest> {
    return this.prisma.labRequest.delete(args);
  }

  async findLabReports(
    parentId: string,
    args: Prisma.LabReportFindManyArgs
  ): Promise<PrismaLabReport[]> {
    return this.prisma.labRequest
      .findUniqueOrThrow({
        where: { id: parentId },
      })
      .labReports(args);
  }

  async getConsultation(parentId: string): Promise<PrismaConsultation | null> {
    return this.prisma.labRequest
      .findUnique({
        where: { id: parentId },
      })
      .consultation();
  }
}
